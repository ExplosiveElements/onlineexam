# Generated by Django 2.2.4 on 2021-05-03 09:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ability', models.IntegerField(verbose_name='能力评级')),
                ('chapter', models.CharField(max_length=20, verbose_name='对应章节')),
                ('subject', models.CharField(max_length=20, verbose_name='课程')),
            ],
            options={
                'verbose_name': '能力评级库',
                'verbose_name_plural': '能力评级库',
                'db_table': 'Ability',
            },
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dept', models.CharField(max_length=20, unique=True, verbose_name='学院')),
            ],
            options={
                'verbose_name': '学院',
                'verbose_name_plural': '学院',
                'db_table': 'dept',
            },
        ),
        migrations.CreateModel(
            name='FillQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('ability', models.IntegerField(verbose_name='能力评级')),
                ('chapter', models.CharField(max_length=20, verbose_name='对应章节')),
                ('title', models.TextField(verbose_name='题目')),
                ('count', models.IntegerField(default=1, verbose_name='空格数')),
                ('answerA', models.CharField(max_length=30, verbose_name='第一空格答案')),
                ('answerB', models.CharField(max_length=30, verbose_name='第二空格答案')),
                ('answerC', models.CharField(max_length=30, verbose_name='第三空格答案')),
                ('answerD', models.CharField(max_length=30, verbose_name='第四空格答案')),
                ('answerE', models.CharField(max_length=30, verbose_name='第五空格答案')),
                ('level', models.CharField(choices=[('5', 'hell'), ('4', 'hard'), ('3', 'difficult'), ('2', 'normal'), ('1', 'easy')], max_length=10, verbose_name='难度等级')),
                ('score', models.IntegerField(default=1, verbose_name='分数')),
            ],
            options={
                'verbose_name': '填空题库',
                'verbose_name_plural': '填空题库',
                'db_table': 'fill_question',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('major', models.CharField(max_length=20, unique=True, verbose_name='专业')),
                ('dept', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='student.Dept')),
            ],
            options={
                'verbose_name': '专业',
                'verbose_name_plural': '专业',
                'db_table': 'Major',
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, verbose_name='试卷名字')),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('level', models.CharField(choices=[('5', 'hell'), ('4', 'hard'), ('3', 'difficult'), ('2', 'normal'), ('1', 'easy')], max_length=10, verbose_name='难度等级')),
                ('examtime', models.DateTimeField()),
                ('fid', models.ManyToManyField(to='student.FillQuestion')),
                ('beforegrade', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '试卷',
                'verbose_name_plural': '试卷',
                'db_table': 'paper',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('ability', models.IntegerField(verbose_name='能力评级')),
                ('chapter', models.CharField(max_length=20, verbose_name='对应章节')),
                ('title', models.TextField(verbose_name='题目')),
                ('optionA', models.CharField(max_length=30, verbose_name='A选项')),
                ('optionB', models.CharField(max_length=30, verbose_name='B选项')),
                ('optionC', models.CharField(max_length=30, verbose_name='C选项')),
                ('optionD', models.CharField(max_length=30, verbose_name='D选项')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=10, verbose_name='答案')),
                ('level', models.CharField(choices=[('5', 'hell'), ('4', 'hard'), ('3', 'difficult'), ('2', 'normal'), ('1', 'easy')], max_length=10, verbose_name='难度等级')),
                ('score', models.IntegerField(default=1, verbose_name='分数')),
            ],
            options={
                'verbose_name': '单项选择题库',
                'verbose_name_plural': '单项选择题库',
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='学号')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('sex', models.CharField(choices=[('男', '男'), ('女', '女')], default='男', max_length=4, verbose_name='性别')),
                ('password', models.CharField(default='111', max_length=20, verbose_name='密码')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('birth', models.DateField(default='0001/01/01', verbose_name='出生日期')),
                ('dept', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='student.Dept', to_field='dept')),
                ('major', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='student.Major', to_field='major')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='教工号')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('sex', models.CharField(choices=[('男', '男'), ('女', '女')], default='男', max_length=4, verbose_name='性别')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('password', models.CharField(default='000', max_length=20, verbose_name='密码')),
                ('birth', models.DateField(default='0001/01/01', verbose_name='出生日期')),
                ('dept', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='student.Dept', to_field='dept')),
            ],
            options={
                'verbose_name': '教师',
                'verbose_name_plural': '教师',
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('major', models.ManyToManyField(to='student.Major')),
                ('stu_id', models.ManyToManyField(to='student.Student')),
                ('tea_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Teacher')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
                'db_table': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(verbose_name='正确率')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Paper')),
                ('qid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Question')),
            ],
            options={
                'verbose_name': '选择题答题情况',
                'verbose_name_plural': '选择题答题情况',
                'db_table': 'qusetion_answer',
            },
        ),
        migrations.AddField(
            model_name='paper',
            name='qid',
            field=models.ManyToManyField(to='student.Question'),
        ),
        migrations.AddField(
            model_name='paper',
            name='tid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Teacher'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20, verbose_name='科目')),
                ('grade', models.IntegerField()),
                ('sid', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='student.Student')),
            ],
            options={
                'verbose_name': '成绩',
                'verbose_name_plural': '成绩',
                'db_table': 'grade',
            },
        ),
        migrations.CreateModel(
            name='FillQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(verbose_name='正确率')),
                ('fid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.FillQuestion')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Paper')),
            ],
            options={
                'verbose_name': '填空题答题情况',
                'verbose_name_plural': '填空题答题情况',
                'db_table': 'fill_qusetion_answer',
            },
        ),
    ]
